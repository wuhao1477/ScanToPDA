name: Build APK with Easter Egg Configuration

on:
  workflow_dispatch:
    inputs:
      action_type:
        description: "Easter egg action type (app|url)"
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - app
          - url
      target:
        description: "🌐 目标网址 或 📱 应用包名 "
        required: false
        type: string
        default: ''
      create_release:
        description: "为此运行创建 GitHub Release"
        required: true
        default: 'false'
        type: choice
        options:
          - true
          - false
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-apk:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.24.0"
          cache: true

      - name: Show env
        run: |
          flutter --version
          dart --version || true
          echo "GITHUB_REF: $GITHUB_REF"

      - name: Make script executable
        run: chmod +x ./build_with_easter_egg.sh

      - name: Build APK (non-interactive)
        shell: bash
        run: |
          set -euxo pipefail
          ACTION_TYPE="${{ github.event.inputs.action_type || 'url' }}"
          TARGET="${{ github.event.inputs.target || 'https://www.baidu.com' }}"
          ./build_with_easter_egg.sh "$ACTION_TYPE" "$TARGET"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  release:
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'false' && false == true) || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true')
    needs: build-apk
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-release-apk
          path: artifacts

      - name: Create GitHub Release (manual dispatch or tag)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('manual-{0}', github.run_number) }}
          name: ${{ startsWith(github.ref, 'refs/tags/') && github.ref_name || format('Manual Build {0}', github.run_number) }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
          files: artifacts/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


